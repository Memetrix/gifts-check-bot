import telebot
from telethon.sync import TelegramClient
from telethon.tl.types import InputUser
from get_user_star_gifts_request import GetUserStarGiftsRequest
import os

# –ü–æ–ª—É—á–∞–µ–º –∫—Ä–µ–¥–µ–Ω—à–∏–∞–ª—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
bot_token = os.getenv("BOT_TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
bot = telebot.TeleBot(bot_token)
userbot = TelegramClient("userbot_session", api_id, api_hash)
userbot.start()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏", callback_data="check_gifts"))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –ø–æ–¥–∞—Ä–∫–∏ üéÅ", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: call.data == "check_gifts")
def handle_check(call):
    telegram_id = call.from_user.id
    try:
        user = userbot.get_input_entity(telegram_id)
        result = userbot(GetUserStarGiftsRequest(user_id=user, offset="", limit=100))

        knockdown_count = 0
        for g in result.gifts:
            data = g.to_dict()
            gift = data.get("gift")
            if not gift or "attributes" not in gift:
                continue
            for attr in gift["attributes"]:
                if "name" in attr and attr["name"].lower() == "knockdown":
                    knockdown_count += 1
                    break

        if knockdown_count >= 6:
            bot.send_message(call.message.chat.id, f"‚úÖ –£ —Ç–µ–±—è {knockdown_count} knockdown-–ø–æ–¥–∞—Ä–∫–æ–≤. –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!")
        else:
            bot.send_message(call.message.chat.id, f"‚ùå –£ —Ç–µ–±—è —Ç–æ–ª—å–∫–æ {knockdown_count} knockdown-–ø–æ–¥–∞—Ä–∫–æ–≤. –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 6.\n–ü–æ–ø—Ä–æ–±—É–π –¥–æ–∫—É–ø–∏—Ç—å –Ω–∞ @mrkt")

    except Exception as e:
        bot.send_message(call.message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤.")
        print("‚ùå –û—à–∏–±–∫–∞:", e)

print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç...")
bot.infinity_polling()