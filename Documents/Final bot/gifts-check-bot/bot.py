import os
import telebot
import threading
import asyncio
from telethon import TelegramClient
from telethon.tl.types import InputUser
from get_user_star_gifts_request import GetUserStarGiftsRequest

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
bot_token = os.getenv("BOT_TOKEN")

bot = telebot.TeleBot(bot_token)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è knockdown-–ø–æ–¥–∞—Ä–∫–æ–≤
def get_knockdown_count(user_id: int) -> int:
    # –°–æ–∑–¥–∞—ë–º event loop –≤—Ä—É—á–Ω—É—é
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    async def inner():
        async with TelegramClient("userbot_session", api_id, api_hash) as client:
            entity = await client.get_input_entity(user_id)
            result = await client(GetUserStarGiftsRequest(user_id=entity, offset="", limit=100))

            count = 0
            for g in result.gifts:
                data = g.to_dict()
                gift = data.get("gift")
                if not gift or "attributes" not in gift:
                    continue
                for attr in gift["attributes"]:
                    if "name" in attr and attr["name"].lower() == "knockdown":
                        count += 1
                        break
            return count

    return loop.run_until_complete(inner())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
@bot.message_handler(commands=["start"])
def start_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏", callback_data="check_gifts"))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –ø–æ–¥–∞—Ä–∫–∏ üéÅ", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: call.data == "check_gifts")
def handle_check(call):
    def run_check():
        user_id = call.from_user.id
        try:
            count = get_knockdown_count(user_id)
            if count >= 6:
                msg = f"‚úÖ –£ —Ç–µ–±—è {count} knockdown-–ø–æ–¥–∞—Ä–∫–æ–≤. –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!"
            else:
                msg = f"‚ùå –£ —Ç–µ–±—è —Ç–æ–ª—å–∫–æ {count} knockdown-–ø–æ–¥–∞—Ä–∫–æ–≤. –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 6.\n–ü–æ–ø—Ä–æ–±—É–π –¥–æ–∫—É–ø–∏—Ç—å –Ω–∞ @mrkt"
            bot.send_message(call.message.chat.id, msg)
        except Exception as e:
            bot.send_message(call.message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤.")
            print("‚ùå –û—à–∏–±–∫–∞:", e)

    threading.Thread(target=run_check).start()

print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç...")
bot.infinity_polling()
